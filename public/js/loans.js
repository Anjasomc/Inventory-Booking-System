/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/loans.js":
/*!*******************************!*\
  !*** ./resources/js/loans.js ***!
  \*******************************/
/***/ (() => {

eval("var loanTable;\n$(\"document\").ready(function () {\n  //Populate Asset table on page load using Datables plugin\n  loanTable = $('#loansTable').DataTable({\n    \"processing\": true,\n    \"serverSide\": true,\n    \"ajax\": \"loans\",\n    columns: [{\n      data: 'id',\n      name: 'id'\n    }, {\n      data: 'start_date',\n      name: 'start_date'\n    }, {\n      data: 'end_date',\n      name: 'end_date'\n    }, {\n      data: 'start_time',\n      name: 'start_time'\n    }, {\n      data: 'end_time',\n      name: 'end_time'\n    }, {\n      data: 'details',\n      name: 'details'\n    }, {\n      data: 'action',\n      name: 'action',\n      orderable: false,\n      searchable: false\n    }]\n  }); //Add new loan to database\n\n  $('#addLoan').on('click', function (e) {\n    $.ajaxSetup({\n      headers: {\n        'X-CSRF-TOKEN': jQuery('meta[name=\"csrf-token\"]').attr('content')\n      }\n    });\n    var modal = bootbox.dialog({\n      message: $(\".addLoan\").html(),\n      size: \"large\",\n      title: \"Create New Loan\",\n      buttons: [{\n        label: \"Save\",\n        className: \"btn btn-primary pull-right\",\n        callback: function callback(result) {\n          //Send ajax request to the server to save to database and then update the table on the website accordingly\n          jQuery.ajax({\n            type: \"POST\",\n            url: \"loans\",\n            async: false,\n            dataType: 'json',\n            data: {\n              name: $('#assetName', '.bootbox').val(),\n              description: $('#assetDescription', '.bootbox').val(),\n              tag: $('#assetTag', '.bootbox').val(),\n              cost: $('#assetCost', '.bootbox').val(),\n              bookable: $('#assetBookable', '.bootbox').is(':checked') ? 1 : 0\n            },\n            success: function success(data) {\n              //Allows the form to close\n              validationError = false; //Popup to tell the user the action has completed successfully\n\n              toastr.success(data['name'] + ' has been created'); //Re-populate the table\n\n              assetTable.ajax.reload(); //Close the model\n\n              modal.modal(\"hide\");\n            },\n            error: function error(data) {\n              //Clear all errors currently being displayed\n              $('.inputError').each(function (i, obj) {\n                $(this).html(\"\");\n              });\n              $.each(data['responseJSON']['errors'], function (key, data) {\n                OutputDataEntryError(key, data);\n              });\n            }\n          });\n          return false;\n        }\n      }, {\n        label: \"Cancel\",\n        className: \"btn btn-danger pull-right\"\n      }],\n      onEscape: function onEscape() {\n        modal.modal(\"hide\");\n      }\n    });\n  }); //Delete asset from database\n\n  $(\"#assetTable\").on('click', '.deleteAsset', function () {\n    $.ajaxSetup({\n      headers: {\n        'X-CSRF-TOKEN': jQuery('meta[name=\"csrf-token\"]').attr('content')\n      }\n    }); //Get the id of the asset we are deleting\n\n    var id = $(this).closest(\"tr\").attr(\"id\");\n    var modal = bootbox.dialog({\n      message: $(\".deleteAsset\").html(),\n      size: \"large\",\n      title: \"Delete Asset\",\n      buttons: [{\n        label: \"Delete\",\n        className: \"btn btn-danger pull-right\",\n        callback: function callback(result) {\n          //Send ajax request to the server to save to database and then update the table on the website accordingly\n          jQuery.ajax({\n            type: \"DELETE\",\n            url: \"assets/\" + id,\n            dataType: 'json',\n            success: function success(data) {\n              //Popup to tell the user the action has completed successfully\n              toastr.success(data['name'] + ' has been deleted'); //Re-populate the table\n\n              assetTable.ajax.reload();\n            },\n            error: function error(data) {\n              toastr.error('Asset could not be deleted');\n            }\n          });\n        }\n      }, {\n        label: \"Cancel\",\n        className: \"btn btn-success pull-right\"\n      }],\n      onEscape: function onEscape() {\n        modal.modal(\"hide\");\n      }\n    });\n  }); //Modify asset in database\n\n  $(\"#assetTable\").on('click', '.modifyAsset', function () {\n    $.ajaxSetup({\n      headers: {\n        'X-CSRF-TOKEN': jQuery('meta[name=\"csrf-token\"]').attr('content')\n      }\n    }); //Get the id of the asset we are deleting\n\n    var id = $(this).closest(\"tr\").attr(\"id\"); //Get data to populate the model\n\n    jQuery.ajax({\n      type: \"GET\",\n      url: \"assets/\" + id,\n      dataType: 'json',\n      success: function success(data) {\n        $('#assetName', '.bootbox').val(data.name), $('#assetDescription', '.bootbox').val(data.description), $('#assetTag', '.bootbox').val(data.tag), $('#assetCost', '.bootbox').val(data.cost), $('#assetBookable', '.bootbox').prop('checked', data.bookable ? true : false);\n      },\n      error: function error(data) {}\n    }); //Show model and handle saving data back to database\n\n    var modal = bootbox.dialog({\n      message: $(\".addAsset\").html(),\n      size: \"large\",\n      title: \"Modify Asset\",\n      buttons: [{\n        label: \"Save\",\n        className: \"btn btn-primary pull-right\",\n        callback: function callback(result) {\n          //Send ajax request to the server to save to database and then update the table on the website accordingly\n          jQuery.ajax({\n            type: \"PATCH\",\n            url: \"assets/\" + id,\n            dataType: 'json',\n            async: false,\n            data: {\n              name: $('#assetName', '.bootbox').val(),\n              description: $('#assetDescription', '.bootbox').val(),\n              tag: $('#assetTag', '.bootbox').val(),\n              cost: $('#assetCost', '.bootbox').val(),\n              bookable: $('#assetBookable', '.bootbox').is(':checked') ? 1 : 0\n            },\n            success: function success(data) {\n              //Popup to tell the user the action has completed successfully\n              toastr.success(data['name'] + ' has been modified'); //Re-populate the table\n\n              assetTable.ajax.reload(); //Close the model\n\n              modal.modal(\"hide\");\n            },\n            error: function error(data) {\n              //Clear all errors currently being displayed\n              $('.inputError').each(function (i, obj) {\n                $(this).html(\"\");\n              });\n              $.each(data['responseJSON']['errors'], function (key, data) {\n                OutputDataEntryError(key, data);\n              });\n            }\n          });\n          return false;\n        }\n      }, {\n        label: \"Cancel\",\n        className: \"btn btn-danger pull-right\"\n      }],\n      onEscape: function onEscape() {\n        modal.modal(\"hide\");\n      }\n    });\n  }); //Show Multi-Day Booking\n\n  $('#formAddLoan').on('change', '#loanTypeMulti', function () {\n    //$('#equipmentTable tbody > tr').remove();\n    //$('#equipmentSelected option').remove();\n    $(\"#singleDayBooking\", '.bootbox').hide();\n    $(\"#multiDayBooking\", '.bootbox').show();\n\n    if ($(this).is(':checked')) {\n      alert(\"2\"); //loanType = \"multi\";\n    }\n  }); //Show Single Day Booking\n\n  $('#formAddLoan').on('change', '#loanTypeSingle', function () {\n    $(\"#multiDayBooking\", '.bootbox').hide(); //$('#equipmentTable tbody > tr').remove();\n    //$('#equipmentSelected option').remove();\n\n    if ($(this).is(':checked')) {\n      $(\"#singleDayBooking\", '.bootbox').show(); //loanType = \"single\";\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/loans.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/loans.js"]();
/******/ 	
/******/ })()
;
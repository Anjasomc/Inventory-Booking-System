/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/loans.js":
/*!*******************************!*\
  !*** ./resources/js/loans.js ***!
  \*******************************/
/***/ (() => {

eval("function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar equipmentCart = {};\nvar equipmentTable;\n$(\"document\").ready(function () {\n  //Fix for missing icons in tempusdominus\n  $.fn.datetimepicker.Constructor.Default = $.extend({}, $.fn.datetimepicker.Constructor.Default, {\n    icons: {\n      time: 'fas fa-clock',\n      date: 'fas fa-calendar',\n      up: 'fas fa-arrow-up',\n      down: 'fas fa-arrow-down',\n      previous: 'far fa-chevron-left',\n      next: 'far fa-chevron-right',\n      today: 'far fa-calendar-check-o',\n      clear: 'far fa-trash',\n      close: 'far fa-times'\n    }\n  }); //Setup better select boxes\n\n  $('#userSelected').select2({\n    theme: \"bootstrap-5\",\n    placeholder: \"Select a user\"\n  });\n  $('#equipmentSelected').select2({\n    theme: \"bootstrap-5\",\n    placeholder: \"Select equipment\"\n  }); //Setup the Datetime picker settings\n\n  var currentDate = new Date(); //Single Day Booking\n  //Loan Date\n\n  $('.dtpStartDateTime').datetimepicker({\n    useCurrent: true,\n    format: \"yyyy-MM-DD HH:mm\"\n  });\n  $('.dtpEndDateTime').datetimepicker({\n    format: \"yyyy-MM-DD HH:mm\"\n  });\n  $(document).on('input', '#loanStartDate, #loanEndDate', function (e) {\n    var allInputsHaveData = false;\n    allInputsHaveData = checkInputFieldsForData([\"loanStartDate\", \"loanEndDate\"]);\n\n    if (allInputsHaveData) {\n      getEquipment();\n    }\n  }); //This table is used to display the list of equipment currently in the shopping cart\n  //equipmentCart.length = 0;\n\n  var colCount = document.getElementsByTagName('th').length;\n  equipmentCart.length = 0;\n\n  if (colCount == 2) {\n    equipmentTable = $('#equipmentTable').DataTable({\n      paging: false,\n      searching: false,\n      info: false,\n      language: {\n        emptyTable: \"Shopping cart is empty\"\n      },\n      \"columns\": [{\n        \"width\": \"80%\"\n      }, {\n        \"width\": \"20%\"\n      }]\n    });\n  } else if (colCount == 3) {\n    equipmentTable = $('#equipmentTable').DataTable({\n      paging: false,\n      searching: false,\n      info: false,\n      language: {\n        emptyTable: \"Shopping cart is empty\"\n      },\n      \"columns\": [{\n        \"width\": \"80%\"\n      }, {\n        \"width\": \"20%\"\n      }, null],\n      createdRow: function createdRow(row, data, dataIndex) {\n        if (row.dataset.returned == 1) {\n          $(row).addClass('addStrike');\n        } else if (row.dataset.returned == null) {\n          $(row).attr('data-returned', 0);\n        }\n      }\n    });\n  } //Get any equipment already in the equipment table. For example if formed was filled out incorrectly\n  //we need to repopulate any equipment returned back into the shopping cart\n\n\n  if (equipmentTable.data().any()) {\n    equipmentTable.rows().every(function (index, element) {\n      var assetID = this.node().id;\n      var assetName = this.data()[0];\n      var returned = this.node().dataset.returned; //Add to the shopping card to pass onto the database for storage\n\n      equipmentCart[assetID] = {};\n      equipmentCart[assetID]['returned'] = returned; //Set the equipment array to a hidden input on the form\n      //Must be sent in json format and not a javascript array\n\n      $('#equipmentToSubmit').val(JSON.stringify(equipmentCart));\n    });\n    console.log(\"HERE\");\n    console.log(equipmentCart); //Populate dropdown\n\n    getEquipment();\n  } else {\n    //Check if we have start and loan date filled out so we can fetch all equipment\n    allInputsHaveData = checkInputFieldsForData([\"loanStartDate\", \"loanEndDate\"]);\n\n    if (allInputsHaveData) {\n      getEquipment();\n    }\n  } //Check that each input is filled out with data\n\n\n  function checkInputFieldsForData(inputs, type) {\n    var dataMissing = false;\n    inputs.forEach(function (input) {\n      if (!$(\"#\" + input).val()) {\n        console.log(input + \" missing\");\n        dataMissing = true;\n        return false;\n      }\n    });\n\n    if (dataMissing) {\n      return false;\n    } else {\n      return true;\n    }\n  } //Return a list of equipment that is avaliable for booking\n\n\n  function getEquipment() {\n    //On Modify Booking we need to fetch the id from the url\n    var url = window.location.href;\n    var id = null;\n\n    if (url.includes('edit')) {\n      console.log(\"HERE\");\n      id = url.split(\"/\")[4];\n      console.log(id);\n    }\n\n    jQuery.ajax({\n      type: \"GET\",\n      url: \"/loans/getBookableEquipment\",\n      async: false,\n      dataType: 'json',\n      data: _defineProperty({\n        loanType: $(\"#formAddLoan input[type='radio']:checked\").attr('id'),\n        start_date: $('#loanStartDate').val(),\n        end_date: $('#loanEndDate').val(),\n        equipmentSelected: equipmentCart,\n        id: id\n      }, \"id\", id),\n      success: function success(data) {\n        populateEquipmentDropdown(\"equipmentSelected\", data);\n      },\n      error: function error(data) {}\n    });\n  } //List all the avaliable equipment for booking on the form\n\n\n  function populateEquipmentDropdown(name, data) {\n    var dropdown = $('#' + name);\n    $(dropdown).empty();\n    dropdown.append(\"<option></option>\"); //Populate dropdown options\n\n    console.log(data);\n    $.each(data, function () {\n      //Make sure item is not already in the shopping cart\n      if (!(this.id in equipmentCart)) {\n        $(\"<option />\", {\n          val: this.id,\n          text: this.name + \" (\" + this.tag + \")\"\n        }).appendTo(dropdown);\n      }\n    }); //Check if any items are in the shopping cart that shouldn't be\n    //This can happen when the user changes the start/end date and\n    //asset is no longer avalaible to book.\n\n    if (equipmentTable.data().any()) {\n      equipmentTable.rows().every(function (index, element) {\n        var assetID = this.node().id;\n        var assetName = this.data()[0];\n        var returned = this.node().dataset.returned;\n        var found = false;\n        $.each(data, function () {\n          if (this.id == assetID) {\n            found = true;\n          }\n        });\n\n        if (found == false) {\n          console.log(assetName + \" needs removing\");\n          delete equipmentCart[assetID];\n          $('#equipmentToSubmit').val(JSON.stringify(equipmentCart)); //Remove from table\n\n          document.getElementById(assetID).classList.add('addStrike');\n        } else if (returned == 0) {\n          document.getElementById(assetID).classList.remove('addStrike');\n        }\n      });\n    } //If you select the equipment too quickly it returns blank so disable for one second\n    //TODO: figure out why this is?\n\n\n    $(\"#equipmentSelected\").attr('disabled', true);\n    setTimeout(function () {\n      $(\"#equipmentSelected\").attr('disabled', false);\n    }, 1000);\n  } //Add selected equipment to the shopping cart\n\n\n  $(document).on('change', '#equipmentSelected', function (e) {\n    console.log(e); //Find what has just been selected\n\n    var assetName = $(e.target).find(\"option:selected\").text();\n    var assetID = $(e.target).val(); //Fill out datatable on form\n    //Must redraw after adding to show user the changes\n\n    if (colCount == 2) {\n      equipmentTable.row.add([assetName, '<button class=\"removeFromCart btn btn-danger btn-sm rounded-0\" type=\"button\" data-assetname=\"' + assetName + '\" data-assetid=\"' + $(this).val() + '\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete\"><i class=\"fa fa-trash-can\"></i></button>']).node().id = assetID;\n    } else if (colCount == 3) {\n      equipmentTable.row.add([assetName, '<button class=\"removeFromCart btn btn-danger btn-sm rounded-0\" type=\"button\" data-assetname=\"' + assetName + '\" data-assetid=\"' + $(this).val() + '\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete\"><i class=\"fa fa-trash-can\"></i></button>', '<button class=\"bookFromCart btn btn-success btn-sm rounded-0\" type=\"button\" data-assetname=\"' + '\" data-assetid=\"' + $(this).val() + '\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Book In Single\"><i class=\"fa fa-check\"></i></button>']).node().id = assetID;\n    }\n\n    equipmentTable.draw(); //Add to the shopping card to pass onto the database for storage\n\n    equipmentCart[assetID] = {};\n    equipmentCart[assetID]['returned'] = 0; //Set the equipment array to a hidden input on the form\n    //Must be sent in json format and not a javascript array\n\n    $('#equipmentToSubmit').val(JSON.stringify(equipmentCart)); //Remove from the dropdown menu\n\n    $('#equipmentSelected :selected').remove();\n  }); //Delete item in shopping cart\n\n  $(document).on('click', '.removeFromCart', function (e) {\n    var dropdown = $('#equipmentSelected'); //Re-add to equipment dropdown\n\n    $(\"<option />\", {\n      val: this.dataset.assetid,\n      text: this.dataset.assetname\n    }).appendTo(dropdown); //Remove from shopping cart array\n\n    delete equipmentCart[this.dataset.assetid];\n    $('#equipmentToSubmit').val(JSON.stringify(equipmentCart)); //Remove from table\n\n    equipmentTable.row($(this).parents('tr')).remove().draw();\n  }); //Book in individual item from the shopping cart\n\n  $(document).on('click', '.bookFromCart', function (e) {\n    //Send ajax request to update database and send email\n    var dropdown = $('#equipmentSelected'); //Re-add to equipment dropdown\n\n    $(\"<option />\", {\n      val: this.dataset.assetid,\n      text: this.dataset.assetname\n    }).appendTo(dropdown);\n    console.log(equipmentCart); //Marked as returned in the shopping cart\n\n    equipmentCart[this.dataset.assetid] = {};\n    equipmentCart[this.dataset.assetid]['returned'] = 1; //console.log(this.dataset.assetid);\n\n    $('#equipmentToSubmit').val(JSON.stringify(equipmentCart)); //Remove from table\n\n    equipmentTable.row($(this).parents('tr')).remove().draw();\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/loans.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/loans.js"]();
/******/ 	
/******/ })()
;